{"version":3,"sources":["main.js","action-response.js","alerts.js","confirm.js","csrf.js","dependencies.js","dropzone.js","form-restore.js","links.js","nav.js","utilities.js","validation/custom-validators.js","validation/form-validation.js","validation/parsley-config.js","validation/validation-messages.js","components/field/checkbox/script.js","components/chart/js/chart.js","components/chart/js/graph-chart.js","components/chart/js/pie-chart.js","components/field/checkbox-group/script.js","components/field/colour/script.js","components/field/date-or-time/script.js","components/field/inner-form/script.js","components/field/dropzone/script.js","components/field/list-of-fields/script.js","components/field/multiselect/script.js","components/field/radio-group/script.js","components/field/number/script.js","components/field/select/script.js","components/field/string/script.js","components/field/textarea/script.js","components/form/js/label.js","components/form/js/stages.js","components/form/js/submit.js","components/form/js/validation.js","components/widget/js/action.js","components/table/js/reorder.js","components/table/js/table.js"],"names":[],"mappingstDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;ACHA;ACAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjzVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AChFA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzBA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnzxHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzfile":"app.js","sourcesContent":["window.Dms = {\r\n    config: {\r\n        // @see /resources/views/partials/js-config.blade.php\r\n    },\r\n    global: {\r\n        initialize: function (element) {\r\n            $.each(Dms.global.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    action: {\r\n        responseHandler: null // @see ./services/action.js\r\n    },\r\n    alerts: {\r\n        add: null // @see ./services/alerts.js\r\n    },\r\n    form: {\r\n        initialize: function (element) {\r\n            var callbacks = Dms.form.initializeCallbacks.concat(Dms.form.initializeValidationCallbacks);\r\n\r\n            $.each(callbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        validation: {}, // @see ./services/form-validation.js\r\n        initializeCallbacks: [],\r\n        initializeValidationCallbacks: []\r\n    },\r\n    table: {\r\n        initialize: function (element) {\r\n            $.each(Dms.table.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    chart: {\r\n        initialize: function (element) {\r\n            $.each(Dms.chart.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    widget: {\r\n        initialize: function (element) {\r\n            $.each(Dms.widget.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    utilities: {} // @see ./services/utilities.js\r\n};\r\n\r\n$(document).ready(function () {\r\n    Dms.global.initialize($(document));\r\n    Dms.form.initialize($(document));\r\n    Dms.table.initialize($(document));\r\n    Dms.chart.initialize($(document));\r\n    Dms.widget.initialize($(document));\r\n});","Dms.action.responseHandler = function (response) {\r\n    if (typeof response.redirect !== 'undefined') {\r\n        if (typeof response.message !== 'undefined') {\r\n            Cookies.set('dms-flash-alert', {\r\n                message: response.message,\r\n                type: response.message_type || 'success'\r\n            });\r\n        }\r\n\r\n        window.location.href = response.redirect;\r\n        return;\r\n    }\r\n\r\n    if (typeof response.message !== 'undefined') {\r\n        Dms.alerts.add(response.message_type || 'success', response.message);\r\n    }\r\n\r\n    if (typeof response.files !== 'undefined') {\r\n        swal({\r\n            title: \"Downloading files\",\r\n            text: \"Please wait while your download begins. <br> Files: \" + response.files.join(', '),\r\n            type: \"info\",\r\n            showConfirmButton: false,\r\n            showLoaderOnConfirm: true\r\n        });\r\n\r\n        $.each(response.files, function (index, file) {\r\n            $('<iframe />')\r\n                .attr('src', Dms.config.routes.downloadFile(file.token))\r\n                .css('display', 'none')\r\n                .appendTo($(document.body));\r\n        });\r\n\r\n        var downloadsBegun = 0;\r\n        var checkIfDownloadsHaveBegun = function () {\r\n\r\n            $.each(response.files, function (index, file) {\r\n                var fileCookieName = 'file-download-' + file.token;\r\n\r\n                if (Cookies.get(fileCookieName)) {\r\n                    downloadsBegun++;\r\n                    Cookies.remove(fileCookieName)\r\n                }\r\n            });\r\n\r\n            if (downloadsBegun < response.files.length) {\r\n                setTimeout(checkIfDownloadsHaveBegun, 100);\r\n            } else {\r\n                swal.close();\r\n            }\r\n        };\r\n\r\n        checkIfDownloadsHaveBegun();\r\n    }\r\n};","Dms.alerts.add = function (type, title, message, timeout) {\r\n    var alertsList = $('.alerts-list');\r\n    var templates = alertsList.find('.alert-templates');\r\n\r\n\r\n    var alert = templates.find('.alert.alert-' + type).clone(true);\r\n\r\n    if (!message) {\r\n        var typeTitle = type.charAt(0).toUpperCase() + type.slice(1);\r\n\r\n        alert.find('.alert-title').text(typeTitle);\r\n        alert.find('.alert-message').text(title);\r\n    } else {\r\n        alert.find('.alert-title').text(title);\r\n        alert.find('.alert-message').text(message);\r\n    }\r\n\r\n    alertsList.append(alert.hide());\r\n    alert.fadeIn();\r\n\r\n    setTimeout(function () {\r\n        if (alert.is(':visible')) {\r\n            alert.fadeOut();\r\n        }\r\n    }, timeout || 15000);\r\n};\r\n\r\nDms.global.initializeCallbacks.push(function () {\r\n    var flashMessage = Cookies.getJSON('dms-flash-alert');\r\n\r\n    if (flashMessage) {\r\n        Cookies.remove('dms-flash-alert');\r\n\r\n        Dms.alerts.add(flashMessage.type, flashMessage.message);\r\n    }\r\n});","Dms.form.initializeCallbacks.push(function () {\r\n    var submitButtons = $('.dms-staged-form, .dms-run-action-form').find('[type=submit].btn-danger');\r\n\r\n    submitButtons.click(function (e) {\r\n        var button = $(this);\r\n\r\n        var result = button.triggerHandler('before-confirmation');\r\n        if (result === false) {\r\n            e.stopImmediatePropagation();\r\n            return false;\r\n        }\r\n\r\n        if (button.data('dms-has-confirmed')) {\r\n            button.data('dms-has-confirmed', false);\r\n            return;\r\n        }\r\n\r\n        swal({\r\n            title: \"Are you sure?\",\r\n            type: \"warning\",\r\n            showCancelButton: true,\r\n            confirmButtonColor: \"#DD6B55\",\r\n            confirmButtonText: \"Yes!\"\r\n        }, function () {\r\n            button.data('dms-has-confirmed', true);\r\n            button.click();\r\n        });\r\n\r\n        e.stopImmediatePropagation();\r\n        return false;\r\n    });\r\n});","Dms.utilities.getCsrfHeaders = function () {\r\n    return {\r\n        'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n    };\r\n};\r\n\r\nDms.global.initializeCallbacks.push(function () {\r\n    $.ajaxSetup({\r\n        headers: Dms.utilities.getCsrfHeaders()\r\n    });\r\n});","$(document).ready(function () {\r\n    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->\r\n    $.widget.bridge('uibutton', $.ui.button);\r\n});","Dropzone.autoDiscover = false;","/* jQuery.values: get or set all of the name/value pairs from child input controls\r\n * @argument data {array} If included, will populate all child controls.\r\n * @returns element if data was provided, or array of values if not\r\n */\r\n\r\n$.fn.values = function(data) {\r\n    var $els = this.find(':input');\r\n    var els = $els.get();\r\n\r\n    var getAbsoluteName = function (element) {\r\n        var name = element.name;\r\n\r\n        if (name.substr(-2) === '[]') {\r\n            var inputsWithSameNameBefore = $els\r\n                .filter(function (index, otherElement) {\r\n                    return otherElement.name === name;\r\n                })\r\n                .filter(function (index, otherElement) {\r\n                    var preceding = 4;\r\n                    return otherElement.compareDocumentPosition(element) & preceding;\r\n                });\r\n\r\n            name = name.substr(0, name.length - 2) + '[' + inputsWithSameNameBefore.length + ']';\r\n        }\r\n\r\n        return name;\r\n    };\r\n\r\n    if(arguments.length === 0) {\r\n        // return all data\r\n        data = {};\r\n\r\n        $.each(els, function() {\r\n            if (this.name && !this.disabled && (this.checked\r\n                || /select|textarea/i.test(this.nodeName)\r\n                || /text|hidden|password/i.test(this.type))) {\r\n                data[getAbsoluteName(this)] = $(this).val();\r\n            }\r\n        });\r\n        return data;\r\n    } else {\r\n\r\n        $.each(els, function() {\r\n            if (!this.name) {\r\n                return;\r\n            }\r\n\r\n            var name = getAbsoluteName(this);\r\n\r\n            if (data[name]) {\r\n                var value = data[name];\r\n                var $this = $(this);\r\n\r\n                if(this.type == 'checkbox' || this.type == 'radio') {\r\n                    $this.attr(\"checked\", value === $.val());\r\n                } else {\r\n                    $this.val(value);\r\n                }\r\n            }\r\n        });\r\n\r\n        return this;\r\n    }\r\n};","Dms.global.initializeCallbacks.push(function () {\r\n    $('a').click(function (e) {\r\n        if ($(this).attr('disabled')) {\r\n            e.stopImmediatePropagation();\r\n\r\n            return false;\r\n        }\r\n\r\n        return true;\r\n    });\r\n});","Dms.global.initializeCallbacks.push(function () {\r\n    var navigationFilter = $('.dms-nav-quick-filter');\r\n    var packagesNavigation = $('.dms-packages-nav');\r\n    var navigationSections = packagesNavigation.find('li.treeview');\r\n    var navigationLabels = packagesNavigation.find('.dms-nav-label');\r\n\r\n    navigationFilter.on('input', function () {\r\n        var filterBy = $(this).val();\r\n\r\n        navigationSections.hide();\r\n        var sectionsToShow = [];\r\n        navigationLabels.each(function (index, navItem) {\r\n            navItem = $(navItem);\r\n            var label = navItem.text();\r\n\r\n            var doesContainFilter = label.toLowerCase().indexOf(filterBy.toLowerCase()) !== -1;\r\n            navItem.closest('li').toggle(doesContainFilter);\r\n\r\n            if (doesContainFilter) {\r\n                navItem.closest('ul.treeview-menu').toggle(doesContainFilter).addClass('menu-open');\r\n                navItem.parents('li.treeview').show();\r\n\r\n                if (navItem.is('.dms-nav-label-group')) {\r\n                    sectionsToShow.push(navItem.closest('li.treeview').get(0));\r\n                }\r\n            }\r\n        });\r\n\r\n        $(sectionsToShow).find('li').show();\r\n        $(sectionsToShow).find('ul.treeview-menu').show().addClass('menu-open');\r\n    });\r\n\r\n    navigationFilter.on('keyup', function (event) {\r\n        var enterKey = 13;\r\n\r\n        if (event.keyCode === enterKey) {\r\n            var link = packagesNavigation.find('a[href!=\"javascript:void(0)\"]:visible').first().attr('href');\r\n            window.location.href = link;\r\n        }\r\n    });\r\n});","Dms.utilities.countDecimals = function (value) {\r\n    if (value % 1 != 0) {\r\n        return value.toString().split(\".\")[1].length;\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\nDms.utilities.idGenerator = function() {\r\n    var S4 = function() {\r\n        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n    };\r\n    return 'id' + (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n};\r\n\r\nDms.utilities.combineFieldNames = function(outer, inner) {\r\n    if (inner.indexOf('[') === -1) {\r\n        return outer + '[' + inner + ']';\r\n    }\r\n\r\n    var firstInner = inner.substring(0, inner.indexOf('['));\r\n    var afterFirstInner = inner.substring(inner.indexOf('['));\r\n\r\n    return outer + '[' + firstInner + ']' + afterFirstInner;\r\n};\r\n\r\nDms.utilities.downloadFileFromUrl = function(url) {\r\n    $('<iframe />')\r\n        .attr({ 'src': url })\r\n        .hide()\r\n        .appendTo('body');\r\n};","window.ParsleyValidator\r\n    .addValidator('ip-address', {\r\n        requirementType: 'string',\r\n        validateString: function (value) {\r\n            var ipV4Regex = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}$/;\r\n            var ipV6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\r\n\r\n            if (!ipV4Regex.test(value)) {\r\n                return true;\r\n            }\r\n\r\n            if (ipV4Regex.test(value)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        messages: {\r\n            en: 'This value should be a valid ip address'\r\n        }\r\n    });\r\n\r\nwindow.ParsleyValidator\r\n    .addValidator('max-decimal-points', {\r\n        requirementType: 'number',\r\n        validateString: function (value, requirement) {\r\n            return Dms.utilities.countDecimals(value) <= requirement;\r\n        },\r\n        messages: {\r\n            en: 'This value should have a maximum of %d decimal places'\r\n        }\r\n    });\r\n\r\nwindow.ParsleyValidator\r\n    .addValidator('min-elements', {\r\n        requirementType: 'number',\r\n        validateMultiple: function (value, requirement) {\r\n            return value.length >= requirement;\r\n        },\r\n        messages: {\r\n            en: 'At least %s options must be selected'\r\n        }\r\n    });\r\n\r\nwindow.ParsleyValidator\r\n    .addValidator('max-elements', {\r\n        requirementType: 'number',\r\n        validateMultiple: function (value, requirement) {\r\n            return value.length <= requirement;\r\n        },\r\n        messages: {\r\n            en: 'No more than %s options can be selected'\r\n        }\r\n    });\r\n\r\n","Dms.form.validation.clearMessages = function (form) {\r\n    form.find('.form-group').removeClass('has-error');\r\n    form.find('.help-block.help-block-error').remove();\r\n};\r\n\r\nDms.form.validation.displayMessages = function (form, fieldMessages, generalMessages) {\r\n    if (!fieldMessages && !generalMessages) {\r\n        return;\r\n    }\r\n\r\n    var makeHelpBlock = function () {\r\n        return $('<span />').addClass('help-block help-block-error');\r\n    };\r\n\r\n    var helpBlock = makeHelpBlock();\r\n\r\n    $.each(generalMessages, function (index, message) {\r\n        helpBlock.append($('<strong />').text(message));\r\n    });\r\n\r\n    form.prepend(helpBlock);\r\n\r\n    var flattenedFieldMessages = {};\r\n\r\n    var visitMessages = function (fieldName, messages) {\r\n        if ($.isArray(messages)) {\r\n            $.each(messages, function (index, message) {\r\n                if (typeof flattenedFieldMessages[fieldName] === 'undefined') {\r\n                    flattenedFieldMessages[fieldName] = [];\r\n                }\r\n\r\n                flattenedFieldMessages[fieldName].push(message);\r\n            });\r\n        } else {\r\n            $.each(messages.constraints, function (index, message) {\r\n                if (typeof flattenedFieldMessages[fieldName] === 'undefined') {\r\n                    flattenedFieldMessages[fieldName] = [];\r\n                }\r\n\r\n                flattenedFieldMessages[fieldName].push(message);\r\n            });\r\n\r\n            $.each(messages.fields, function (fieldElementName, elementMessages) {\r\n                visitMessages(fieldName + '[' + fieldElementName + ']', elementMessages);\r\n            });\r\n        }\r\n    };\r\n    $.each(fieldMessages, visitMessages);\r\n\r\n    $.each(flattenedFieldMessages, function (fieldName, messages) {\r\n        var fieldGroup = form.find('.form-group[data-field-name=\"' + fieldName + '\"]').add(\r\n            form.find('.form-group *[data-field-validation-for]')\r\n                .filter(function () {\r\n                    return $(this).attr('data-field-validation-for').indexOf(fieldName) !== -1;\r\n                })\r\n                .closest('.form-group')\r\n        );\r\n        var validationMessagesContainer = fieldGroup.find('.dms-validation-messages-container');\r\n\r\n        var helpBlock = makeHelpBlock();\r\n        $.each(messages, function (index, message) {\r\n            helpBlock.append($('<strong />').text(message));\r\n        });\r\n\r\n        fieldGroup.addClass('has-error');\r\n        validationMessagesContainer.prepend(helpBlock);\r\n    });\r\n};","window.ParsleyConfig = {\r\n    successClass: \"has-success\",\r\n    errorClass: \"has-error\",\r\n    excluded: \"input[type=button], input[type=submit], input[type=reset], input[type=hidden], [disabled], :hidden\",\r\n    classHandler: function (el) {\r\n        return el.$element.closest(\".form-group\");\r\n    },\r\n    errorsWrapper: \"<span class='help-block dms-validation-message'></span>\",\r\n    errorTemplate: \"<span></span>\"\r\n};","Dms.global.initializeCallbacks.push(function () {\r\n    window.ParsleyValidator.addCatalog('en', {\r\n        defaultMessage: \"This value seems to be invalid.\",\r\n        type: {\r\n            email: \"This value should be a valid email.\",\r\n            url: \"This value should be a valid url.\",\r\n            number: \"This value should be a valid number.\",\r\n            integer: \"This value should be a valid integer.\",\r\n            digits: \"This value should be digits.\",\r\n            alphanum: \"This value should be alphanumeric.\"\r\n        },\r\n        notblank: \"This value should not be blank.\",\r\n        required: \"This value is required.\",\r\n        pattern: \"This value seems to be invalid.\",\r\n        min: \"This value should be greater than or equal to %s.\",\r\n        max: \"This value should be lower than or equal to %s.\",\r\n        range: \"This value should be between %s and %s.\",\r\n        minlength: \"This value is too short. It should have %s characters or more.\",\r\n        maxlength: \"This value is too long. It should have %s characters or fewer.\",\r\n        length: \"This character length is invalid. It should be between %s and %s characters long.\",\r\n        mincheck: \"You must select at least %s choices.\",\r\n        maxcheck: \"You must select %s choices or fewer.\",\r\n        check: \"You must select between %s and %s choices.\",\r\n        equalto: \"This must match the confirmation field.\"\r\n    }, true);\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=checkbox].single-checkbox').iCheck({\r\n        checkboxClass: 'icheckbox_square-blue',\r\n        increaseArea: '20%'\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-chart-control').each(function () {\r\n        var control = $(this);\r\n        var chartContainer = control.find('chart.dms-chart-container');\r\n        var loadChartUrl = control.attr('data-load-chart-url');\r\n\r\n        var criteria = {\r\n            orderings: [],\r\n            conditions: []\r\n        };\r\n\r\n        var currentAjaxRequest;\r\n\r\n        var loadCurrentData = function () {\r\n            chartContainer.addClass('loading');\r\n\r\n            if (currentAjaxRequest) {\r\n                currentAjaxRequest.abort();\r\n            }\r\n\r\n            currentAjaxRequest = $.ajax({\r\n                url: loadChartUrl,\r\n                type: 'post',\r\n                dataType: 'html',\r\n                data: criteria\r\n            });\r\n\r\n            currentAjaxRequest.done(function (chartData) {\r\n                chartContainer.html(chartData);\r\n                Dms.chart.initialize(chartContainer);\r\n            });\r\n\r\n            currentAjaxRequest.fail(function () {\r\n                if (currentAjaxRequest.statusText === 'abort') {\r\n                    return;\r\n                }\r\n\r\n                chartContainer.addClass('error');\r\n\r\n                swal({\r\n                    title: \"Could not load chart data\",\r\n                    text: \"An unexpected error occurred\",\r\n                    type: \"error\"\r\n                });\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                chartContainer.removeClass('loading');\r\n            });\r\n        };\r\n\r\n        loadCurrentData();\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function () {\r\n    $('.dms-chart.dms-graph-chart').each(function () {\r\n        var chart = $(this);\r\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\r\n        var chartType = !!chart.attr('data-chart-type');\r\n        var horizontalAxisKey = chart.attr('data-horizontal-axis-key');\r\n        var verticalAxisKeys = JSON.parse(chart.attr('data-vertical-axis-keys'));\r\n        var verticalAxisLabels = JSON.parse(chart.attr('data-vertical-axis-labels'));\r\n\r\n        if (!chart.attr('id')) {\r\n            chart.attr('id', Dms.utilities.idGenerator());\r\n        }\r\n\r\n        var morrisConfig = {\r\n            element: chart.attr('id'),\r\n            data: chartData,\r\n            xkey: horizontalAxisKey,\r\n            ykeys: verticalAxisKeys,\r\n            labels: verticalAxisLabels\r\n        };\r\n\r\n        if (chartType === 'bar') {\r\n            Morris.Bar(morrisConfig);\r\n        } else if (chartType === 'area') {\r\n            Morris.Area(morrisConfig);\r\n        } else {\r\n            Morris.Line(morrisConfig);\r\n        }\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function () {\r\n    $('.dms-chart.dms-pie-chart').each(function () {\r\n        var chart = $(this);\r\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\r\n\r\n        if (!chart.attr('id')) {\r\n            chart.attr('id', Dms.utilities.idGenerator());\r\n        }\r\n\r\n        Morris.Donut({\r\n            element: chart.attr('id'),\r\n            data: chartData\r\n        });\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.list-of-checkboxes').each(function () {\r\n        var listOfCheckboxes = $(this);\r\n        listOfCheckboxes.find('input[type=checkbox]').iCheck({\r\n            checkboxClass: 'icheckbox_square-blue',\r\n            increaseArea: '20%'\r\n        });\r\n\r\n        var firstCheckbox = listOfCheckboxes.find('input[type=checkbox]').first();\r\n        firstCheckbox.attr('data-parsley-min-elements', listOfCheckboxes.attr('data-min-elements'));\r\n        firstCheckbox.attr('data-parsley-max-elements', listOfCheckboxes.attr('data-max-elements'));\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input.dms-colour-input').each(function () {\r\n        var config = {\r\n            showInput: true,\r\n            showPalette: true\r\n        };\r\n\r\n        if ($(this).hasClass('dms-colour-input-rgb')) {\r\n            config.preferredFormat = 'rgb';\r\n        } else if ($(this).hasClass('dms-colour-input-rgba')) {\r\n            config.preferredFormat = 'rgba';\r\n        }\r\n\r\n        $(this).spectrum(config);\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    var convertPhpDateFormatToMomentFormat = function (format) {\r\n        var replacements = {\r\n            'd': 'DD',\r\n            'D': 'ddd',\r\n            'j': 'D',\r\n            'l': 'dddd',\r\n            'N': 'E',\r\n            'S': 'o',\r\n            'w': 'e',\r\n            'z': 'DDD',\r\n            'W': 'W',\r\n            'F': 'MMMM',\r\n            'm': 'MM',\r\n            'M': 'MMM',\r\n            'n': 'M',\r\n            'o': 'YYYY',\r\n            'Y': 'YYYY',\r\n            'y': 'YY',\r\n            'a': 'a',\r\n            'A': 'A',\r\n            'g': 'h',\r\n            'G': 'H',\r\n            'h': 'hh',\r\n            'H': 'HH',\r\n            'i': 'mm',\r\n            's': 'ss',\r\n            'u': 'SSS',\r\n            'e': 'zz', // TODO: full timezone id\r\n            'O': 'ZZ',\r\n            'P': 'Z',\r\n            'T': 'zz',\r\n            'U': 'X'\r\n        };\r\n\r\n        $.each(replacements, function (phpToken, momentToken) {\r\n            format = format.replace(phpToken, momentToken);\r\n        });\r\n\r\n        return format;\r\n    };\r\n\r\n    element.find('input.date-or-time')\r\n        .each(function () {\r\n            $(this).datetimepicker({\r\n                format: convertPhpDateFormatToMomentFormat($(this).attr('data-date-format')),\r\n                minDate: $(this).attr('data-min-date') ? new Date($(this).attr('data-min-date')) : null,\r\n                maxDate: $(this).attr('data-max-date') ? new Date($(this).attr('data-max-date')) : null,\r\n                useCurrent: !$(this).attr('data-dont-use-current')\r\n            });\r\n        });\r\n\r\n    element.find('.date-or-time-range')\r\n        .each(function () {\r\n            var startInput = $(this).find('input.date-or-time.start-input');\r\n            var endInput = $(this).find('input.date-or-time.end-input');\r\n\r\n            startInput.on(\"dp.change\", function (e) {\r\n                endInput.data(\"DateTimePicker\").minDate(e.date);\r\n            });\r\n\r\n            endInput.on(\"dp.change\", function (e) {\r\n                startInput.data(\"DateTimePicker\").maxDate(e.date);\r\n            });\r\n        });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('.dms-inner-form').each(function () {\r\n        var innerForm = $(this);\r\n\r\n        if (innerForm.attr('data-readonly')) {\r\n            innerForm.find(':input').attr('readonly', 'readonly');\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.dropzone-container').each(function () {\r\n        var container = $(this);\r\n        var uniqueId = Dms.utilities.idGenerator();\r\n        var form = container.closest('form');\r\n        var dropzoneElement = container.find('.dms-dropzone');\r\n        var fieldName = container.attr('data-name');\r\n        var required = container.attr('data-required');\r\n        var tempFilePrefix = container.attr('data-temp-file-key-prefix');\r\n        var uploadTempFileUrl = container.attr('data-upload-temp-file-url');\r\n        var maxFileSize = container.attr('data-max-size');\r\n        var maxFiles = container.attr('max-files');\r\n        var existingFiles = JSON.parse(container.attr('data-files') || '[]');\r\n        var isMultiple = container.attr('data-multi-upload');\r\n\r\n        var maxImageWidth = container.attr('data-max-width');\r\n        var minImageWidth = container.attr('data-min-width');\r\n        var maxImageHeight = container.attr('data-max-height');\r\n        var minImageHeight = container.attr('data-min-height');\r\n        var imageEditor = container.find('.dms-image-editor');\r\n\r\n        var getDownloadUrlForFile = function (file) {\r\n            if (file.downloadUrl) {\r\n                return file.downloadUrl;\r\n            }\r\n\r\n            if (file.tempFileToken) {\r\n                return container.attr('data-download-temp-file-url').replace('__token__', file.tempFileToken);\r\n            }\r\n\r\n            return null;\r\n        };\r\n\r\n        var editedImagesQueue = [];\r\n        var isEditingImage = false;\r\n\r\n        var showImageEditor = function (file, saveCallback, alwaysCallback, options) {\r\n\r\n            if (isEditingImage) {\r\n                editedImagesQueue.push(arguments);\r\n                return;\r\n            }\r\n\r\n            isEditingImage = true;\r\n            if (!options) {\r\n                options = {};\r\n            }\r\n\r\n            imageEditor.find('.modal-title').text(options.title || 'Edit Image');\r\n\r\n            var canvasContainer = imageEditor.find('.dms-canvas-container');\r\n            canvasContainer.find('img').remove();\r\n\r\n            var imageSrc = getDownloadUrlForFile(file);\r\n\r\n            var loadDarkroom = function (imageSrc) {\r\n                var imageElement = $('<img />').attr('src', imageSrc);\r\n                canvasContainer.append(imageElement);\r\n\r\n                var darkroom = new Darkroom(imageElement.get(0), {\r\n                    // Canvas initialization size\r\n                    minWidth: options.minWidth,\r\n                    minHeight: options.minHeight,\r\n                    maxWidth: options.maxWidth,\r\n                    maxHeight: options.maxHeight,\r\n                    plugins: {\r\n                        save: false // disable plugin\r\n                    },\r\n\r\n                    initialize: function () {\r\n                        imageEditor.modal('show');\r\n                    }\r\n                });\r\n\r\n                imageEditor.find('.btn-save-changes').on('click', function () {\r\n                    var blob = window.dataURLtoBlob(darkroom.canvas.toDataURL());\r\n\r\n                    imageEditor.modal('hide');\r\n\r\n                    blob.name = file.name;\r\n                    saveCallback(blob);\r\n                    alwaysCallback();\r\n                });\r\n\r\n                imageEditor.on('hide.bs.modal', function () {\r\n                    darkroom.selfDestroy();\r\n                    canvasContainer.find('img').remove();\r\n                    alwaysCallback();\r\n\r\n                    imageEditor.unbind('hide.bs.modal');\r\n                    imageEditor.find('.btn-save-changes').unbind('click');\r\n\r\n                    isEditingImage = false;\r\n\r\n                    if (editedImagesQueue.length > 0) {\r\n                        showImageEditor.apply(null, editedImagesQueue.pop());\r\n                    }\r\n                });\r\n            };\r\n\r\n            if (imageSrc) {\r\n                loadDarkroom(imageSrc);\r\n            } else {\r\n                var reader = new FileReader();\r\n\r\n                reader.addEventListener(\"load\", function () {\r\n                    loadDarkroom(reader.result);\r\n                }, false);\r\n\r\n                reader.readAsDataURL(file);\r\n            }\r\n        };\r\n\r\n        var acceptedFiles = JSON.parse(container.attr('data-allowed-extensions') || '[]').map(function (extension) {\r\n            return '.' + extension;\r\n        });\r\n\r\n        if (container.attr('data-images-only')) {\r\n            acceptedFiles.push('image/*')\r\n        }\r\n\r\n        dropzoneElement.attr('id', 'dropzone-' + uniqueId);\r\n        var dropzone = new Dropzone('#dropzone-' + uniqueId, {\r\n            url: uploadTempFileUrl,\r\n            paramName: 'file',\r\n            maxFilesize: maxFileSize,\r\n            maxFiles: isMultiple ? maxFiles : 1,\r\n            headers: Dms.utilities.getCsrfHeaders(),\r\n            acceptedFiles: acceptedFiles.join(','),\r\n\r\n            init: function () {\r\n                var dropzone = this;\r\n\r\n                this.on(\"addedfile\", function (file) {\r\n                    var removeButton = Dropzone.createElement(\r\n                        '<button type=\"button\" class=\"btn btn-sm btn-danger btn-remove-file\"><i class=\"fa fa-times\"></i></button>'\r\n                    );\r\n\r\n                    removeButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        dropzone.removeFile(file);\r\n\r\n                        if (file.action === 'keep-existing') {\r\n                            file.action = 'delete-existing';\r\n                            updateSubmissionState();\r\n                        }\r\n\r\n                        if (dropzone.options.maxFiles === 0) {\r\n                            dropzone.options.maxFiles++;\r\n                        }\r\n                    });\r\n\r\n                    file.previewElement.appendChild(removeButton);\r\n                });\r\n\r\n                this.on(\"removedfile\", function (file) {\r\n                    if (file.action === 'keep-existing') {\r\n                        file.action = 'delete-existing';\r\n                    }\r\n\r\n                    updateSubmissionState();\r\n                });\r\n\r\n                this.on(\"complete\", function (file) {\r\n                    var downloadButton = Dropzone.createElement(\r\n                        '<button type=\"button\" class=\"btn btn-sm btn-success btn-download-file\"><i class=\"fa fa-download\"></i></button>'\r\n                    );\r\n\r\n                    downloadButton.addEventListener('click', function (e) {\r\n                        e.preventDefault();\r\n                        e.stopPropagation();\r\n\r\n                        Dms.utilities.downloadFileFromUrl(getDownloadUrlForFile(file));\r\n                    });\r\n\r\n                    file.previewElement.appendChild(downloadButton);\r\n\r\n                    if (file.width && file.height) {\r\n                        var editImageButton = Dropzone.createElement(\r\n                            '<button type=\"button\" class=\"btn btn-sm btn-info btn-edit-file\"><i class=\"fa fa-pencil-square-o\"></i></button>'\r\n                        );\r\n\r\n                        editImageButton.addEventListener('click', function (e) {\r\n                            e.preventDefault();\r\n                            e.stopPropagation();\r\n                            $(editImageButton).prop('disabled', true);\r\n\r\n                            showImageEditor(file, function (newFile) {\r\n                                dropzone.removeFile(file);\r\n\r\n                                if (dropzone.options.maxFiles === 0) {\r\n                                    dropzone.options.maxFiles++;\r\n                                }\r\n\r\n                                dropzone.addFile(newFile);\r\n                            }, function () {\r\n                                $(editImageButton).prop('disabled', false);\r\n                            });\r\n                        });\r\n\r\n                        file.previewElement.appendChild(editImageButton);\r\n                    }\r\n                });\r\n\r\n                this.on('success', function (file, response) {\r\n                    file.action = 'store-new';\r\n                    file.tempFileToken = response.tokens['file'];\r\n                    updateSubmissionState();\r\n                });\r\n\r\n                this.on(\"thumbnail\", function (file) {\r\n                    if (!file.acceptDimensions && !file.rejectDimensions) {\r\n                        return;\r\n                    }\r\n\r\n                    if ((maxImageWidth && file.width > maxImageWidth) || (maxImageHeight && file.height > maxImageHeight)\r\n                        || (minImageWidth && file.width < minImageWidth) || (minImageHeight && file.height < minImageHeight)) {\r\n                        file.rejectDimensions();\r\n                    }\r\n                    else {\r\n                        file.acceptDimensions();\r\n                    }\r\n                });\r\n\r\n                $.each(existingFiles, function (index, existingFile) {\r\n                    existingFile.originalIndex = index;\r\n                    existingFile.action = 'keep-existing';\r\n                    existingFile.tempFileToken = null;\r\n\r\n                    dropzone.emit(\"addedfile\", existingFile);\r\n                    dropzone.createThumbnailFromUrl(existingFile, existingFile.previewUrl);\r\n                    dropzone.emit(\"complete\", existingFile);\r\n\r\n                    if (dropzone.options.maxFiles > 0) {\r\n                        dropzone.options.maxFiles--;\r\n                    }\r\n                });\r\n\r\n            },\r\n\r\n            accept: function (file, done) {\r\n                file.acceptDimensions = done;\r\n                file.rejectDimensions = function () {\r\n                    showImageEditor(file, function (editedFile) {\r\n                        dropzone.addFile(editedFile);\r\n                    }, function () {\r\n                        try {\r\n                            dropzone.removeFile(file);\r\n                        } catch (e) {\r\n                        }\r\n                    }, {\r\n                        title: 'The supplied image does not match the required dimensions so it has been resized to: (' + formatRequiredDimensions(file) + ')',\r\n                        minWidth: minImageWidth,\r\n                        minHeight: minImageHeight,\r\n                        maxWidth: maxImageWidth,\r\n                        maxHeight: maxImageHeight\r\n                    })\r\n                };\r\n            }\r\n        });\r\n\r\n        var formatRequiredDimensions = function (file) {\r\n            var min = '', max = '';\r\n\r\n            if (minImageWidth && minImageHeight) {\r\n                min = 'min: ' + minImageWidth + 'x' + minImageHeight + 'px';\r\n            }\r\n            else if (minImageWidth) {\r\n                min = 'min width: ' + minImageWidth + 'px';\r\n            }\r\n            else if (minImageHeight) {\r\n                min = 'min height: ' + minImageHeight + 'px';\r\n            }\r\n\r\n            if (maxImageWidth && minImageHeight) {\r\n                max = 'max: ' + maxImageWidth + 'x' + minImageHeight + 'px';\r\n            }\r\n            else if (maxImageWidth) {\r\n                max = 'max width: ' + maxImageWidth + 'px';\r\n            }\r\n            else if (minImageHeight) {\r\n                max = 'max height: ' + minImageHeight + 'px';\r\n            }\r\n\r\n            return (min + ' ' + max).trim();\r\n        };\r\n\r\n        dropzoneElement.addClass('dropzone');\r\n\r\n        var updateSubmissionState = function () {\r\n            form.find('.file-action-' + uniqueId).remove();\r\n            form.find('.file-token-' + uniqueId).remove();\r\n\r\n            var allFiles = [];\r\n\r\n            $.each(existingFiles.concat(dropzone.getAcceptedFiles()), function (index, file) {\r\n                if (file.action === 'delete-existing') {\r\n                    return;\r\n                }\r\n\r\n                if (typeof file.originalIndex !== 'undefined') {\r\n                    allFiles[file.originalIndex] = file;\r\n                    return;\r\n                }\r\n\r\n                while (typeof allFiles[index] !== 'undefined') {\r\n                    index++;\r\n                }\r\n\r\n                allFiles[index] = file;\r\n            });\r\n\r\n            $.each(allFiles, function (index, file) {\r\n                if (!file) {\r\n                    return;\r\n                }\r\n\r\n                var fileFieldName;\r\n                fileFieldName = isMultiple\r\n                    ? fieldName + '[' + index + ']'\r\n                    : fieldName;\r\n\r\n                form.append($('<input />').attr({\r\n                    'class': 'file-action-' + uniqueId,\r\n                    'type': 'hidden',\r\n                    'name': fileFieldName + '[action]',\r\n                    'value': file.action\r\n                }));\r\n\r\n                if (file.tempFileToken) {\r\n                    form.append($('<input />').attr({\r\n                        'class': 'file-token-' + uniqueId,\r\n                        'type': 'hidden',\r\n                        'name': Dms.utilities.combineFieldNames(tempFilePrefix, fileFieldName + '[file]'),\r\n                        'value': file.tempFileToken\r\n                    }));\r\n                }\r\n            });\r\n        };\r\n\r\n        updateSubmissionState();\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('ul.dms-field-list').each(function () {\r\n        var listOfFields = $(this);\r\n        var formGroup = listOfFields.closest('.form-group');\r\n        var templateField = listOfFields.find('.field-list-template');\r\n        var addButton = listOfFields.find('.btn-add-field');\r\n        var isInvalidating = false;\r\n\r\n        var minFields = listOfFields.attr('data-min-elements');\r\n        var maxFields = listOfFields.attr('data-max-elements');\r\n\r\n        var getAmountOfInputs = function () {\r\n            return listOfFields.children('.field-list-item').length;\r\n        };\r\n\r\n        var invalidateControl = function () {\r\n            if (isInvalidating) {\r\n                return;\r\n            }\r\n\r\n            isInvalidating = true;\r\n\r\n            var amountOfInputs = getAmountOfInputs();\r\n\r\n            addButton.prop('disabled', getAmountOfInputs() >= maxFields);\r\n            listOfFields.find('.btn-remove-field').prop('disabled', getAmountOfInputs() <= minFields);\r\n\r\n            while (amountOfInputs < minFields) {\r\n                addNewField();\r\n                amountOfInputs++;\r\n            }\r\n\r\n            isInvalidating = false;\r\n        };\r\n\r\n        var addNewField = function () {\r\n            var newField = templateField.clone()\r\n                .removeClass('field-list-template')\r\n                .removeClass('hidden')\r\n                .removeClass('dms-form-no-submit')\r\n                .addClass('field-list-item');\r\n\r\n            var fieldInputElement = newField.find('.field-list-input');\r\n            fieldInputElement.html(fieldInputElement.text());\r\n\r\n            var currentIndex = getAmountOfInputs();\r\n\r\n            $.each(['name', 'data-name', 'data-field-name'], function (index, attr) {\r\n                fieldInputElement.find('[' + attr + '*=\"::index::\"]').each(function () {\r\n                    $(this).attr(attr, $(this).attr(attr).replace('::index::', currentIndex));\r\n                });\r\n            });\r\n\r\n            addButton.closest('.field-list-add').before(newField);\r\n\r\n            Dms.form.initialize(fieldInputElement);\r\n\r\n            invalidateControl();\r\n        };\r\n\r\n        listOfFields.on('click', '.btn-remove-field', function () {\r\n            var field = $(this).closest('.field-list-item');\r\n            field.remove();\r\n            formGroup.trigger('dms-change');\r\n\r\n            invalidateControl();\r\n        });\r\n\r\n        addButton.on('click', addNewField);\r\n\r\n        invalidateControl();\r\n\r\n        var requiresAnExactAmountOfFields = typeof minFields !== 'undefined' && minFields === maxFields;\r\n        if (requiresAnExactAmountOfFields && getAmountOfInputs() == minFields) {\r\n            addButton.closest('.field-list-add').remove();\r\n            listOfFields.find('.btn-remove-field').closest('.field-list-button-container').remove();\r\n            listOfFields.find('.field-list-input').removeClass('col-xs-10 col-md-11').addClass('col-xs-12');\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('select[multiple]').multiselect({\r\n        enableFiltering: true,\r\n        includeSelectAllOption: true\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=\"number\"][data-max-decimal-places]').each(function () {\r\n        $(this).attr('data-parsley-max-decimal-places', $(this).attr('data-max-decimal-places'));\r\n    });\r\n\r\n    element.find('input[type=\"number\"][data-greater-than]').each(function () {\r\n        $(this).attr('data-parsley-gt', $(this).attr('data-greater-than'));\r\n    });\r\n\r\n    element.find('input[type=\"number\"][data-less-than]').each(function () {\r\n        $(this).attr('data-parsley-lt', $(this).attr('data-less-than'));\r\n    });\r\n\r\n    element.find('input[type=\"number\"]').each(function () {\r\n        if ($(this).attr('data-decimal-number')) {\r\n            $(this).attr({\r\n                'type': $(this).attr('step') ? 'number' : 'text',\r\n                'data-parsley-type': 'number'\r\n            });\r\n        } else {\r\n            $(this).attr({\r\n                'data-parsley-type': 'integer'\r\n            });\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=\"ip-address\"]')\r\n        .attr('type', 'text')\r\n        .attr('data-parsley-ip-address', '1');\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    var fieldCounter = 1;\r\n\r\n    element.find('.dms-form-fieldset .form-group').each(function () {\r\n        var fieldLabel = $(this).children('label[data-for]');\r\n        var forFieldName = fieldLabel.attr('data-for');\r\n\r\n        if (forFieldName) {\r\n            var forField = $(this).first('*[name=\"' + forFieldName + '\"], .dms-inner-form[data-name=\"' + forFieldName + '\"]');\r\n\r\n            if (!forField.attr('id')) {\r\n                forField.attr('id', 'dms-field-' + fieldCounter);\r\n                fieldCounter++;\r\n            }\r\n\r\n            fieldLabel.attr('for', forField.attr('id'));\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('form.dms-staged-form').each(function () {\r\n        var form = $(this);\r\n        var parsley = form.parsley(window.ParsleyConfig);\r\n        var stageElements = form.find('.dms-form-stage');\r\n\r\n        var arePreviousFieldsValid = function (fields) {\r\n            var originalScroll = $(document).scrollTop();\r\n            var focusedElement = $(document.activeElement);\r\n            parsley.validate();\r\n            focusedElement.focus();\r\n            $(document).scrollTop(originalScroll);\r\n\r\n            return fields.closest('.form-group').find('.dms-validation-message *').length === 0;\r\n        };\r\n\r\n        stageElements.filter('.dms-dependent-form-stage').each(function () {\r\n            var currentStage = $(this);\r\n            var container = currentStage.closest('.dms-form-stage-container');\r\n            var previousStages = container.prevAll('.dms-form-stage-container').find('.dms-form-stage');\r\n            var loadStageUrl = currentStage.attr('data-load-stage-url');\r\n            var dependentFields = currentStage.attr('data-stage-dependent-fields');\r\n            var dependentFieldNames = dependentFields ? JSON.parse(dependentFields) : null;\r\n            var currentAjaxRequest = null;\r\n\r\n            var makeDependentFieldSelectorFor = function (selector) {\r\n                if (dependentFieldNames) {\r\n                    var selectors = [];\r\n                    $.each(dependentFieldNames, function (index, fieldName) {\r\n                        selectors.push(selector + '[name=\"' + fieldName + '\"]:input');\r\n                        selectors.push(selector + '[name^=\"' + fieldName + '[\"][name$=\"]\"]:input');\r\n                    });\r\n\r\n                    return selectors.join(',');\r\n                } else {\r\n                    return selector + '[name]:input';\r\n                }\r\n            };\r\n\r\n            var loadNextStage = function () {\r\n                var previousFields = previousStages.find(makeDependentFieldSelectorFor('*'));\r\n\r\n                if (!arePreviousFieldsValid(previousFields)) {\r\n                    return;\r\n                }\r\n\r\n                Dms.form.validation.clearMessages(form);\r\n\r\n                if (currentAjaxRequest) {\r\n                    currentAjaxRequest.abort();\r\n                }\r\n\r\n                container.removeClass('loaded');\r\n                container.addClass('loading');\r\n\r\n                var formData = new FormData();\r\n\r\n                previousFields.each(function () {\r\n                    var fieldName = $(this).attr('name');\r\n\r\n                    if ($(this).is('[type=file]')) {\r\n                        $.each(this.files, function (index, file) {\r\n                            formData.append(fieldName, file);\r\n                        });\r\n                    } else {\r\n                        formData.append(fieldName, $(this).val());\r\n                    }\r\n                });\r\n\r\n                currentAjaxRequest = $.ajax({\r\n                    url: loadStageUrl,\r\n                    type: 'post',\r\n                    processData: false,\r\n                    contentType: false,\r\n                    dataType: 'html',\r\n                    data: formData\r\n                });\r\n\r\n                currentAjaxRequest.done(function (html) {\r\n                    container.addClass('loaded');\r\n                    var currentValues = currentStage.values();\r\n                    currentStage.html(html);\r\n                    Dms.form.initialize(currentStage);\r\n                    currentStage.values(currentValues);\r\n                });\r\n\r\n                currentAjaxRequest.fail(function (xhr) {\r\n                    if (currentAjaxRequest.statusText === 'abort') {\r\n                        return;\r\n                    }\r\n\r\n                    switch (xhr.status) {\r\n                        case 422: // Unprocessable Entity (validation failure)\r\n                            var validation = JSON.parse(xhr.responseText);\r\n                            Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\r\n                            break;\r\n\r\n                        case 400: // Bad request\r\n                            swal({\r\n                                title: \"Could not load form\",\r\n                                text: JSON.parse(xhr.responseText).message,\r\n                                type: \"error\"\r\n                            });\r\n                            break;\r\n\r\n                        default: // Unknown error\r\n                            swal({\r\n                                title: \"Could not load form\",\r\n                                text: \"An unexpected error occurred\",\r\n                                type: \"error\"\r\n                            });\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                currentAjaxRequest.always(function () {\r\n                    container.removeClass('loading');\r\n                });\r\n            };\r\n\r\n            previousStages.on('input', makeDependentFieldSelectorFor('input'), loadNextStage);\r\n            previousStages.on('input', makeDependentFieldSelectorFor('textarea'), loadNextStage);\r\n            previousStages.on('change', makeDependentFieldSelectorFor('select'), loadNextStage);\r\n\r\n            if (dependentFieldNames) {\r\n                var selectors = [];\r\n                $.each(dependentFieldNames, function (index, fieldName) {\r\n                    selectors.push('.form-group[data-field-name=\"' + fieldName + '\"]');\r\n                });\r\n\r\n                previousStages.on('dms-change', selectors.join(','), loadNextStage);\r\n            } else {\r\n                previousStages.on('dms-change', '.form-group[data-field-name]', loadNextStage);\r\n            }\r\n        });\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('form.dms-staged-form, form.dms-run-action-form').each(function () {\r\n        var form = $(this);\r\n        var parsley = form.parsley(window.ParsleyConfig);\r\n        var afterRunCallbacks = [];\r\n        var submitButtons = form.find('input[type=submit], button[type=submit]');\r\n        var submitMethod = form.attr('method');\r\n        var submitUrl = form.attr('action');\r\n\r\n        var isFormValid = function () {\r\n            return parsley.isValid()\r\n                && form.find('.dms-validation-message *').length === 0\r\n                && form.find('.dms-form-stage-container').length === form.find('.dms-form-stage-container.loaded').length;\r\n        };\r\n\r\n        submitButtons.on('click before-confirmation', function (e) {\r\n            parsley.validate();\r\n\r\n            if (!isFormValid()) {\r\n                e.stopImmediatePropagation();\r\n                return false;\r\n            }\r\n        });\r\n\r\n        form.on('submit', function (e) {\r\n            e.preventDefault();\r\n\r\n            Dms.form.validation.clearMessages(form);\r\n\r\n            var fieldsToReappend = [];\r\n            form.find('.dms-form-no-submit').each(function () {\r\n                var removedFields = $(this).children().detach();\r\n\r\n                fieldsToReappend.push({\r\n                    parentElement: $(this),\r\n                    children: removedFields\r\n                });\r\n            });\r\n\r\n            var formData = new FormData(form.get(0));\r\n\r\n            $.each(fieldsToReappend, function (index, elements) {\r\n                elements.parentElement.append(elements.children);\r\n            });\r\n\r\n            submitButtons.prop('disabled', true);\r\n            submitButtons.addClass('ladda-button').attr('data-style', 'expand-right');\r\n            var ladda = Ladda.create(submitButtons.get(0));\r\n            ladda.start();\r\n\r\n            var currentAjaxRequest = $.ajax({\r\n                url: submitUrl,\r\n                type: submitMethod,\r\n                processData: false,\r\n                contentType: false,\r\n                dataType: 'json',\r\n                data: formData,\r\n                xhr: function() {\r\n                    var xhr = $.ajaxSettings.xhr();\r\n\r\n                    if(form.find('input[type=file]').length && xhr.upload){\r\n                        xhr.upload.addEventListener('progress', function (event) {\r\n                            if (event.lengthComputable) {\r\n                                ladda.setProgress(event.loaded / event.total);\r\n                            }\r\n                        }, false);\r\n                    }\r\n\r\n                    return xhr;\r\n                }\r\n            });\r\n\r\n            currentAjaxRequest.done(function (data) {\r\n                Dms.action.responseHandler(data);\r\n                $.each(afterRunCallbacks, function (index, callback) {\r\n                    callback(data);\r\n                });\r\n            });\r\n\r\n            currentAjaxRequest.fail(function (xhr) {\r\n                if (currentAjaxRequest.statusText === 'abort') {\r\n                    return;\r\n                }\r\n\r\n                switch (xhr.status) {\r\n                    case 422: // Unprocessable Entity (validation failure)\r\n                        var validation = JSON.parse(xhr.responseText);\r\n                        Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\r\n                        break;\r\n\r\n                    default: // Unknown error\r\n                        swal({\r\n                            title: \"Could not submit form\",\r\n                            text: \"An unexpected error occurred\",\r\n                            type: \"error\"\r\n                        });\r\n                        break;\r\n                }\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                submitButtons.prop('disabled', false);\r\n                ladda.stop();\r\n            });\r\n\r\n            return false;\r\n        });\r\n\r\n        var parentToRemove = form.attr('data-after-run-remove-closest');\r\n        if (parentToRemove) {\r\n            afterRunCallbacks.push(function () {\r\n                form.closest(parentToRemove).fadeOut(100);\r\n            });\r\n        }\r\n\r\n        afterRunCallbacks.push(function () {\r\n            form.find('input[type=password]').val('');\r\n        });\r\n    });\r\n});","Dms.form.initializeValidationCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-form-fields').each(function () {\r\n        if (!$(this).attr('id')) {\r\n            $(this).attr('id', Dms.utilities.idGenerator());\r\n        }\r\n    });\r\n\r\n    element.find('.dms-form-fields').each(function () {\r\n        var formFieldSection = $(this);\r\n        var formFieldsGroupId = formFieldSection.attr('id');\r\n\r\n\r\n        var buildElementSelector = function (fieldName) {\r\n            return '#' + formFieldsGroupId + ' *[name=\"' + fieldName + '\"]';\r\n        };\r\n\r\n        var fieldValidations = {\r\n            'data-equal-fields': 'data-parsley-equalto',\r\n            'data-greater-than-fields': 'data-parsley-gt',\r\n            'data-greater-than-or-equal-fields': 'data-parsley-gte',\r\n            'data-less-than-fields': 'data-parsley-lt',\r\n            'data-less-than-or-equal-fields': 'data-parsley-lte'\r\n        };\r\n\r\n        $.each(fieldValidations, function (validationAttr, parsleyAttr) {\r\n            var fieldsMap = formFieldSection.attr(validationAttr);\r\n\r\n            if (fieldsMap) {\r\n                $.each(JSON.parse(fieldsMap), function (fieldName, otherFieldName) {\r\n                    var field = $(buildElementSelector(fieldName));\r\n                    field.attr(parsleyAttr, buildElementSelector(otherFieldName));\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    element.find('form.dms-staged-form').each(function () {\r\n        var form = $(this);\r\n        form.parsley(window.ParsleyConfig);\r\n\r\n        form.find('.dms-form-fields').each(function (index) {\r\n            $(this).find(':input').attr('data-parsley-group', 'validation-group-' + index);\r\n        });\r\n    });\r\n\r\n    element.find('form.dms-form').each(function () {\r\n        $(this).parsley(window.ParsleyConfig);\r\n    });\r\n});","Dms.widget.initializeCallbacks.push(function () {\r\n    $('.dms-widget-unparameterized-action, .dms-widget-parameterized-action').each(function () {\r\n        var widget = $(this);\r\n        var button = widget.find('button');\r\n\r\n        if (button.is('.btn-danger')) {\r\n            var isConfirmed = false;\r\n\r\n            button.click(function () {\r\n                if (isConfirmed) {\r\n                    isConfirmed = false;\r\n                    return;\r\n                }\r\n\r\n                swal({\r\n                    title: \"Are you sure?\",\r\n                    text: \"This will execute the '\" + widget.attr('data-action-label') + \"' action\",\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#DD6B55\",\r\n                    confirmButtonText: \"Yes proceed!\"\r\n                }, function () {\r\n                    isConfirmed = true;\r\n                    $(this).click();\r\n                });\r\n\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n});","Dms.table.initializeCallbacks.push(function (element) {\r\n    var groupCounter = 0;\r\n\r\n    element.find('.dms-table-body-sortable').each(function () {\r\n        var tableBody = $(this);\r\n        var control = tableBody.closest('.dms-table-control');\r\n        var reorderRowsUrl = control.attr('data-reorder-row-action-url');\r\n\r\n        var performReorder = function (event) {\r\n            var newIndex = typeof event.newIndex === 'undefined' ? event.oldIndex : event.newIndex;\r\n\r\n            var criteria = control.data('dms-table-criteria');\r\n            var row = $(event.item);\r\n            var objectId = row.find('.dms-row-action-column').attr('data-object-id');\r\n            var reorderButtonHandle = row.find('.dms-drag-handle');\r\n\r\n            var reorderRequest = $.ajax({\r\n                url: reorderRowsUrl,\r\n                type: 'post',\r\n                dataType: 'html',\r\n                data: {\r\n                    object: objectId,\r\n                    index: criteria.offset + newIndex + 1\r\n                }\r\n            });\r\n\r\n            if (reorderButtonHandle.is('button')) {\r\n                reorderButtonHandle.addClass('ladda-button').attr('data-style', 'expand-right');\r\n                var ladda = Ladda.create(reorderButtonHandle.get(0));\r\n                ladda.start();\r\n\r\n                reorderRequest.always(ladda.stop)\r\n            }\r\n\r\n            reorderRequest.fail(function () {\r\n                swal({\r\n                    title: \"Could not reorder item\",\r\n                    text: \"An unexpected error occurred\",\r\n                    type: \"error\"\r\n                });\r\n            });\r\n        };\r\n\r\n        var sortable = new Sortable(tableBody.get(0), {\r\n            group: \"sortable-group\" + groupCounter++,\r\n            sort: true,  // sorting inside list\r\n            animation: 150,  // ms, animation speed moving items when sorting, `0` — without animation\r\n            handle: \".dms-drag-handle\",  // Drag handle selector within list items\r\n            draggable: \"tr\",  // Specifies which items inside the element should be sortable\r\n            ghostClass: \"sortable-ghost\",  // Class name for the drop placeholder\r\n            chosenClass: \"sortable-chosen\",  // Class name for the chosen item\r\n            dataIdAttr: 'data-id',\r\n\r\n            onEnd: performReorder\r\n\r\n        });\r\n    });\r\n});","Dms.table.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-table-control').each(function () {\r\n        var control = $(this);\r\n        var tableContainer = control.find('.dms-table-container');\r\n        var table = tableContainer.find('table.dms-table');\r\n        var filterForm = control.find('.dms-table-quick-filter-form');\r\n        var rowsPerPageSelect = control.find('.dms-table-rows-per-page-form select');\r\n        var paginationPreviousButton = control.find('.dms-table-pagination .dms-pagination-previous');\r\n        var paginationNextButton = control.find('.dms-table-pagination .dms-pagination-next');\r\n        var loadRowsUrl = control.attr('data-load-rows-url');\r\n        var stringFilterableComponentIds = JSON.parse(control.attr('data-string-filterable-component-ids')) || [];\r\n\r\n        var currentPage = 0;\r\n\r\n        var criteria = {\r\n            orderings: [],\r\n            condition_mode: 'or',\r\n            conditions: [],\r\n            offset: 0,\r\n            max_rows: rowsPerPageSelect.val()\r\n        };\r\n\r\n        var currentAjaxRequest;\r\n\r\n        var loadCurrentPage = function () {\r\n            if (currentAjaxRequest) {\r\n                currentAjaxRequest.abort();\r\n            }\r\n\r\n            tableContainer.addClass('loading');\r\n\r\n            criteria.offset = currentPage * criteria.max_rows;\r\n\r\n            currentAjaxRequest = $.ajax({\r\n                url: loadRowsUrl,\r\n                type: 'post',\r\n                dataType: 'html',\r\n                data: criteria\r\n            });\r\n\r\n            currentAjaxRequest.done(function (tableData) {\r\n                table.html(tableData);\r\n                Dms.table.initialize(table);\r\n                Dms.form.initialize(table);\r\n\r\n                control.data('dms-table-criteria', criteria);\r\n                control.attr('data-has-loaded-table-data', true);\r\n\r\n                if (table.find('tbody tr').length < criteria.max_rows) {\r\n                    paginationNextButton.attr('disabled', true);\r\n                }\r\n            });\r\n\r\n            currentAjaxRequest.fail(function () {\r\n                if (currentAjaxRequest.statusText === 'abort') {\r\n                    return;\r\n                }\r\n\r\n                tableContainer.addClass('has-error');\r\n\r\n                swal({\r\n                    title: \"Could not load table data\",\r\n                    text: \"An unexpected error occurred\",\r\n                    type: \"error\"\r\n                });\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                tableContainer.removeClass('loading');\r\n            });\r\n        };\r\n\r\n        filterForm.find('button').click(function () {\r\n            criteria.orderings = [\r\n                {\r\n                    component: filterForm.find('[name=component]').val(),\r\n                    direction: filterForm.find('[name=direction]').val()\r\n                }\r\n            ];\r\n\r\n            criteria.conditions = [];\r\n\r\n            var filterByString = filterForm.find('[name=filter]').val();\r\n\r\n            if (filterByString) {\r\n                $.each(stringFilterableComponentIds, function (index, componentId) {\r\n                    criteria.conditions.push({\r\n                        component: componentId,\r\n                        operator: 'string-contains-case-insensitive',\r\n                        value: filterByString\r\n                    });\r\n                });\r\n            }\r\n\r\n            loadCurrentPage();\r\n        });\r\n\r\n        filterForm.find('input[name=filter]').on('keyup', function (event) {\r\n            var enterKey = 13;\r\n\r\n            if (event.keyCode === enterKey) {\r\n                filterForm.find('button').click();\r\n            }\r\n        });\r\n\r\n        rowsPerPageSelect.on('change', function () {\r\n            criteria.max_rows = $(this).val();\r\n\r\n            loadCurrentPage();\r\n        });\r\n\r\n        paginationPreviousButton.click(function () {\r\n            paginationNextButton.attr('disabled', false);\r\n            currentPage--;\r\n            loadCurrentPage();\r\n        });\r\n\r\n        paginationNextButton.click(function () {\r\n            paginationPreviousButton.attr('disabled', false);\r\n            currentPage++;\r\n            loadCurrentPage();\r\n        });\r\n\r\n        paginationPreviousButton.click(function () {\r\n            currentPage--;\r\n            loadCurrentPage();\r\n        });\r\n\r\n        paginationPreviousButton.attr('disabled', true);\r\n\r\n        if (table.is(':visible')) {\r\n            loadCurrentPage();\r\n        }\r\n\r\n        table.on('dms-load-table-data', loadCurrentPage);\r\n    });\r\n\r\n    $('.dms-table-tabs').each(function () {\r\n        var tabs = $(this);\r\n\r\n        tabs.find('.dms-table-tab-show-button').on('click', function () {\r\n            var linkedTablePane = $($(this).attr('href'));\r\n\r\n            linkedTablePane.find('.dms-table-control:not([data-has-loaded-table-data]) .dms-table-container:not(.loading) .dms-table').triggerHandler('dms-load-table-data');\r\n        });\r\n    });\r\n});"],"sourceRoot":"/source/"}