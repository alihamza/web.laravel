{"version":3,"sources":["main.js","action.js","alerts.js","csrf.js","custom-validators.js","dependencies.js","form-validation.js","utilities.js","components/field/checkbox/script.js","components/chart/js/chart.js","components/chart/js/graph-chart.js","components/chart/js/pie-chart.js","components/field/checkbox-group/script.js","components/field/colour/script.js","components/field/date-or-time/script.js","components/field/inner-form/script.js","components/field/list-of-fields/script.js","components/field/multiselect/script.js","components/field/number/script.js","components/field/radio-group/script.js","components/field/select/script.js","components/field/string/script.js","components/field/textarea/script.js","components/table/js/table.js","components/form/js/label.js","components/form/js/stages.js","components/form/js/submit.js","components/form/js/validation.js","components/widget/js/action.js"],"names":[],"mappingstDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACbA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACfA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACRA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC1DA;AACA;AACA;AACA;AACA;AACA;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACZA;AACA;AACA;ACFA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;ACJA;AACA;AACA;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACnlHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["window.Dms = {\r\n    config: {\r\n        // @see /resources/views/partials/js-config.blade.php\r\n    },\r\n    global: {\r\n        initialize: function (element) {\r\n            $.each(Dms.global.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    action: {\r\n        responseHandler: null // @see ./services/action.js\r\n    },\r\n    alerts: {\r\n        add: null // @see ./services/alerts.js\r\n    },\r\n    form: {\r\n        initialize: function (element) {\r\n            var callbacks = Dms.form.initializeCallbacks.concat(Dms.form.initializeValidationCallbacks);\r\n\r\n            $.each(callbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        validation: {}, // @see ./services/form-validation.js\r\n        initializeCallbacks: [],\r\n        initializeValidationCallbacks: []\r\n    },\r\n    table: {\r\n        initialize: function (element) {\r\n            $.each(Dms.table.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    chart: {\r\n        initialize: function (element) {\r\n            $.each(Dms.chart.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    widget: {\r\n        initialize: function (element) {\r\n            $.each(Dms.widget.initializeCallbacks, function (index, callback) {\r\n                callback(element);\r\n            });\r\n        },\r\n        initializeCallbacks: []\r\n    },\r\n    utilities: {} // @see ./services/utilities.js\r\n};\r\n\r\n$(document).ready(function () {\r\n    Dms.global.initialize($(document));\r\n    Dms.form.initialize($(document));\r\n    Dms.table.initialize($(document));\r\n    Dms.chart.initialize($(document));\r\n    Dms.widget.initialize($(document));\r\n});","Dms.action.responseHandler = function (response) {\r\n    if (typeof respoonse.messsage !== 'undefined') {\r\n        Dms.alerts.add('success', response.message);\r\n    }\r\n\r\n    if (typeof response.files !== 'undefined') {\r\n        swal({\r\n            title: \"Downloading files\",\r\n            text: \"Please wait while your download begins. <br> Files: \" + response.files.join(', '),\r\n            type: \"info\",\r\n            showConfirmButton: false,\r\n            showLoaderOnConfirm: true\r\n        });\r\n\r\n        $.each(response.files, function (index, file) {\r\n            $('<iframe />')\r\n                .attr('src', Dms.config.routes.downloadFile(file.token))\r\n                .css('display', 'none')\r\n                .appendTo($(document.body));\r\n        });\r\n\r\n        var downloadsBegun = 0;\r\n        var checkIfDownloadsHaveBegun = function () {\r\n\r\n            $.each(response.files, function (index, file) {\r\n                var fileCookieName = 'file-download-' + file.token;\r\n\r\n                if (Cookies.get(fileCookieName)) {\r\n                    downloadsBegun++;\r\n                    Cookies.remove(fileCookieName)\r\n                }\r\n            });\r\n\r\n            if (downloadsBegun < response.files.length) {\r\n                setTimeout(checkIfDownloadsHaveBegun, 100);\r\n            } else {\r\n                swal.close();\r\n            }\r\n        };\r\n\r\n        checkIfDownloadsHaveBegun();\r\n    }\r\n};","Dms.alerts.add = function (type, title, message) {\r\n    var alertsList = $('.alerts-list');\r\n    var templates = alertsList.find('.alert-templates');\r\n\r\n\r\n    var alert = templates.find('.alert.alert-' + type).clone(true);\r\n    alert.find('.alert-title').text(title);\r\n    alert.find('.alert-message').text(message);\r\n\r\n    alertsList.append(alert);\r\n};","Dms.global.initializeCallbacks.push(function () {\r\n    $.ajaxSetup({\r\n        headers: {\r\n            'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\r\n        }\r\n    });\r\n});","window.ParsleyValidator\r\n    .addValidator('ip-address', {\r\n        requirementType: 'string',\r\n        validateString: function (value) {\r\n            var ipV4Regex = /^((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)(\\.|$)){4}$/;\r\n            var ipV6Regex = /^(([0-9a-fA-F]{1,4}:){7,7}[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,7}:|([0-9a-fA-F]{1,4}:){1,6}:[0-9a-fA-F]{1,4}|([0-9a-fA-F]{1,4}:){1,5}(:[0-9a-fA-F]{1,4}){1,2}|([0-9a-fA-F]{1,4}:){1,4}(:[0-9a-fA-F]{1,4}){1,3}|([0-9a-fA-F]{1,4}:){1,3}(:[0-9a-fA-F]{1,4}){1,4}|([0-9a-fA-F]{1,4}:){1,2}(:[0-9a-fA-F]{1,4}){1,5}|[0-9a-fA-F]{1,4}:((:[0-9a-fA-F]{1,4}){1,6})|:((:[0-9a-fA-F]{1,4}){1,7}|:)|fe80:(:[0-9a-fA-F]{0,4}){0,4}%[0-9a-zA-Z]{1,}|::(ffff(:0{1,4}){0,1}:){0,1}((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])|([0-9a-fA-F]{1,4}:){1,4}:((25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9])\\.){3,3}(25[0-5]|(2[0-4]|1{0,1}[0-9]){0,1}[0-9]))$/;\r\n\r\n            if (!ipV4Regex.test(value)) {\r\n                return true;\r\n            }\r\n\r\n            if (ipV4Regex.test(value)) {\r\n                return true;\r\n            }\r\n\r\n            return false;\r\n        },\r\n        messages: {\r\n            en: 'This value should be a valid ip address'\r\n        }\r\n    });\r\n\r\nwindow.ParsleyValidator\r\n    .addValidator('max-decimal-points', {\r\n        requirementType: 'number',\r\n        validateString: function (value, requirement) {\r\n            return Dms.utilities.countDecimals(value) <= requirement;\r\n        },\r\n        messages: {\r\n            en: 'This value should have a maximum of %d decimal places'\r\n        }\r\n    });","$(document).ready(function () {\r\n    <!-- Resolve conflict in jQuery UI tooltip with Bootstrap tooltip -->\r\n    $.widget.bridge('uibutton', $.ui.button);\r\n});","Dms.form.validation.clearMessages = function (form) {\r\n    form.removeClass('has-error');\r\n    form.find('.form-group').removeClass('has-error');\r\n    form.find('.help-block.help-block-error').remove();\r\n};\r\n\r\nDms.form.validation.displayMessages = function (form, fieldMessages, generalMessages) {\r\n    if (!fieldMessages && !generalMessages) {\r\n        return;\r\n    }\r\n\r\n    form.addClass('has-error');\r\n\r\n    var makeHelpBlock = function () {\r\n        return $('<span />').addClass(['help-block', 'help-block-error']);\r\n    };\r\n\r\n    var helpBlock = makeHelpBlock();\r\n\r\n    $.each(generalMessages, function (index, message) {\r\n        helpBlock.append($('<strong />').text(message));\r\n    });\r\n\r\n    form.prepend(helpBlock);\r\n\r\n    var flattenedFieldMessages = {};\r\n\r\n    var visitMessages = function (fieldName, messages) {\r\n        if ($.isArray(messages)) {\r\n            $.each(messages, function (index, message) {\r\n                flattenedFieldMessages[fieldName] = message;\r\n            });\r\n        } else {\r\n            $.each(messages.constraints, function (index, message) {\r\n                flattenedFieldMessages[fieldName] = message;\r\n            });\r\n\r\n            $.each(messages.fields, function (fieldElementName, elementMessages) {\r\n                visitMessages(fieldName + '[' + fieldElementName + ']', elementMessages);\r\n            });\r\n        }\r\n    };\r\n    $.each(fieldMessages, visitMessages);\r\n\r\n    $.each(flattenedFieldMessages, function (fieldName, messages) {\r\n        var fieldGroup = form.find('.form-group[data-field-name=\"' + fieldName + '\"]');\r\n\r\n        var helpBlock = makeHelpBlock();\r\n        $.each(messages, function (index, message) {\r\n            helpBlock.append($('<strong />').text(message));\r\n        });\r\n\r\n        fieldGroup.prepend(helpBlock);\r\n    });\r\n};","Dms.utilities.countDecimals = function (value) {\r\n    if (value % 1 != 0) {\r\n        return value.toString().split(\".\")[1].length;\r\n    }\r\n\r\n    return 0;\r\n};\r\n\r\nDms.utilities.guidGenerator = function() {\r\n    var S4 = function() {\r\n        return (((1+Math.random())*0x10000)|0).toString(16).substring(1);\r\n    };\r\n    return (S4()+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+\"-\"+S4()+S4()+S4());\r\n};","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=checkbox].single-checkbox').iCheck({\r\n        checkboxClass: 'icheckbox_square-blue',\r\n        increaseArea: '20%'\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-chart-control').each(function () {\r\n        var control = $(this);\r\n        var chartContainer = control.find('chart.dms-chart-container');\r\n        var loadChartUrl = control.attr('data-load-chart-url');\r\n\r\n\r\n        var criteria = {\r\n            orderings: [],\r\n            conditions: []\r\n        };\r\n\r\n        var currentAjaxRequest;\r\n\r\n        var loadCurrentData = function () {\r\n            chartContainer.addClass('loading');\r\n\r\n            if (currentAjaxRequest) {\r\n                currentAjaxRequest.abort();\r\n            }\r\n\r\n            currentAjaxRequest = $.ajax({\r\n                url: loadChartUrl,\r\n                type: 'post',\r\n                dataType: 'html',\r\n                data: criteria\r\n            });\r\n\r\n            currentAjaxRequest.done(function (chartData) {\r\n                chartContainer.html(chartData);\r\n                Dms.chart.initialize(chartContainer);\r\n            });\r\n\r\n            currentAjaxRequest.fail(function () {\r\n                chartContainer.addClass('error');\r\n\r\n                swal({\r\n                    title: \"Could not load chart data\",\r\n                    text: \"An unexpected error occurred\",\r\n                    type: \"error\"\r\n                });\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                chartContainer.removeClass('loading');\r\n            });\r\n        };\r\n\r\n        loadCurrentData();\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function () {\r\n    $('.dms-chart.dms-graph-chart').each(function () {\r\n        var chart = $(this);\r\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\r\n        var chartType = !!chart.attr('data-chart-type');\r\n        var horizontalAxisKey = chart.attr('data-horizontal-axis-key');\r\n        var verticalAxisKeys = JSON.parse(chart.attr('data-vertical-axis-keys'));\r\n        var verticalAxisLabels = JSON.parse(chart.attr('data-vertical-axis-labels'));\r\n\r\n        if (!chart.attr('id')) {\r\n            chart.attr('id', Dms.utilities.guidGenerator());\r\n        }\r\n\r\n        var morrisConfig = {\r\n            element: chart.attr('id'),\r\n            data: chartData,\r\n            xkey: horizontalAxisKey,\r\n            ykeys: verticalAxisKeys,\r\n            labels: verticalAxisLabels\r\n        };\r\n\r\n        if (chartType === 'bar') {\r\n            Morris.Bar(morrisConfig);\r\n        } else if (chartType === 'area') {\r\n            Morris.Area(morrisConfig);\r\n        } else {\r\n            Morris.Line(morrisConfig);\r\n        }\r\n    });\r\n});","Dms.chart.initializeCallbacks.push(function () {\r\n    $('.dms-chart.dms-pie-chart').each(function () {\r\n        var chart = $(this);\r\n        var chartData = JSON.parse(chart.attr('data-chart-data'));\r\n\r\n        if (!chart.attr('id')) {\r\n            chart.attr('id', Dms.utilities.guidGenerator());\r\n        }\r\n\r\n        Morris.Donut({\r\n            element: chart.attr('id'),\r\n            data: chartData\r\n        });\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.list-of-checkboxes').each(function () {\r\n        var listOfCheckboxes = $(this);\r\n        listOfCheckboxes.find('input[type=checkbox]').iCheck({\r\n            checkboxClass: 'icheckbox_square-blue',\r\n            increaseArea: '20%'\r\n        });\r\n\r\n        var minFields = listOfCheckboxes.attr('data-min-elements') || 0;\r\n        var maxFields = listOfCheckboxes.attr('data-max-elements') || Infinity;\r\n\r\n        listOfCheckboxes.find('input[type=checkbox]').on('click', function (e) {\r\n            var currentCount = listOfCheckboxes.find('input[type=checkbox]:checked').length;\r\n\r\n            if (currentCount >= maxFields && !$(this).is(':checked')) {\r\n                e.preventDefault();\r\n            }\r\n        });\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input.dms-colour-input').each(function () {\r\n        var config = {\r\n            showInput: true,\r\n            showPalette: true\r\n        };\r\n\r\n        if ($(this).hasClass('dms-colour-input-rgb')) {\r\n            config.preferredFormat = 'rgb';\r\n        } else if ($(this).hasClass('dms-colour-input-rgba')) {\r\n            config.preferredFormat = 'rgba';\r\n        }\r\n\r\n        $(this).spectrum(config);\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    var convertPhpDateFormatToMomentFormat = function (format) {\r\n        var replacements = {\r\n            'd': 'DD',\r\n            'D': 'ddd',\r\n            'j': 'D',\r\n            'l': 'dddd',\r\n            'N': 'E',\r\n            'S': 'o',\r\n            'w': 'e',\r\n            'z': 'DDD',\r\n            'W': 'W',\r\n            'F': 'MMMM',\r\n            'm': 'MM',\r\n            'M': 'MMM',\r\n            'n': 'M',\r\n            'o': 'YYYY',\r\n            'Y': 'YYYY',\r\n            'y': 'YY',\r\n            'a': 'a',\r\n            'A': 'A',\r\n            'g': 'h',\r\n            'G': 'H',\r\n            'h': 'hh',\r\n            'H': 'HH',\r\n            'i': 'mm',\r\n            's': 'ss',\r\n            'u': 'SSS',\r\n            'e': 'zz', // TODO: full timezone id\r\n            'O': 'ZZ',\r\n            'P': 'Z',\r\n            'T': 'zz',\r\n            'U': 'X'\r\n        };\r\n\r\n        $.each(replacements, function (phpToken, momentToken) {\r\n            format = format.replace(phpToken, momentToken);\r\n        });\r\n\r\n        return format;\r\n    };\r\n\r\n    element.find('input.date-or-time')\r\n        .each(function () {\r\n            $(this).datetimepicker({\r\n                format: convertPhpDateFormatToMomentFormat($(this).attr('data-date-format')),\r\n                minDate: $(this).attr('data-min-date') ? new Date($(this).attr('data-min-date')) : null,\r\n                maxDate: $(this).attr('data-max-date') ? new Date($(this).attr('data-max-date')) : null,\r\n                useCurrent: !$(this).attr('data-dont-use-current')\r\n            });\r\n        });\r\n\r\n    element.find('.date-or-time-range')\r\n        .each(function () {\r\n            var startInput = $(this).find('input.date-or-time.start-input');\r\n            var endInput = $(this).find('input.date-or-time.end-input');\r\n\r\n            startInput.on(\"dp.change\", function (e) {\r\n                endInput.data(\"DateTimePicker\").minDate(e.date);\r\n            });\r\n\r\n            endInput.on(\"dp.change\", function (e) {\r\n                startInput.data(\"DateTimePicker\").maxDate(e.date);\r\n            });\r\n        });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('.dms-inner-form').each(function () {\r\n        var innerForm = $(this);\r\n\r\n        if (innerForm.attr('data-readonly')) {\r\n            innerForm.find(':input').attr('readonly', 'readonly');\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('ul.list-field').each(function () {\r\n        var listOfFields = $(this);\r\n        var templateField = $(this).find('.list-field-template');\r\n        var addButton = $(this).find('.btn-add-field');\r\n        var isInvalidating = false;\r\n\r\n        var minFields = listOfFields.attr('data-min-elements');\r\n        var maxFields = listOfFields.attr('data-max-elements');\r\n\r\n        var getAmountOfInputs = function () {\r\n            return listOfFields.children('.list-field-item').length;\r\n        };\r\n\r\n        var invalidateControl = function () {\r\n            if (isInvalidating) {\r\n                return;\r\n            }\r\n\r\n            isInvalidating = true;\r\n\r\n            var amountOfInputs = getAmountOfInputs();\r\n\r\n            addButton.prop('disabled', getAmountOfInputs() >= maxFields);\r\n            listOfFields.find('.btn-remove-field').prop('disabled', getAmountOfInputs() <= minFields);\r\n\r\n            while (amountOfInputs < minFields) {\r\n                addNewField();\r\n                amountOfInputs++;\r\n            }\r\n\r\n            isInvalidating = false;\r\n        };\r\n\r\n        var addNewField = function () {\r\n            listOfFields.append(\r\n                templateField.clone()\r\n                    .removeClass('list-field-template')\r\n                    .addClass('list-field-item')\r\n            );\r\n\r\n            invalidateControl();\r\n        };\r\n\r\n        listOfFields.on('click', '.btn-remove-field', function () {\r\n            $(this).closest('.list-field-item').remove();\r\n\r\n            invalidateControl();\r\n        });\r\n\r\n        invalidateControl();\r\n\r\n        if (minFields !== null && minFields === maxFields) {\r\n            addButton.closest('.list-field-add').remove();\r\n            listOfFields.find('.btn-remove-field').remove();\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('select[multiple]').multiselect({\r\n        enableFiltering: true,\r\n        includeSelectAllOption: true\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=\"number\"][data-max-decimal-places]').each(function () {\r\n        $(this).attr('data-parsley-max-decimal-places', $(this).attr('data-max-decimal-places'));\r\n    });\r\n\r\n    element.find('input[type=\"number\"][data-greater-than]').each(function () {\r\n        $(this).attr('data-parsley-gt', $(this).attr('data-greater-than'));\r\n    });\r\n\r\n    element.find('input[type=\"number\"][data-less-than]').each(function () {\r\n        $(this).attr('data-parsley-lt', $(this).attr('data-less-than'));\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n    element.find('input[type=\"ip-address\"]')\r\n        .attr('type', 'text')\r\n        .attr('data-parsley-ip-address', '1');\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n});","Dms.table.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-table-control').each(function () {\r\n        var control = $(this);\r\n        var tableContainer = control.find('.dms-table-container');\r\n        var table = tableContainer.find('table.dms-table');\r\n        var filterForm = control.find('.dms-table-quick-filter-form');\r\n        var loadRowsUrl = control.attr('data-load-rows-url');\r\n        var reorderRowsUrl = control.attr('data-reorder-row-action-url');\r\n\r\n        var currentPage = 0;\r\n\r\n        var getItemsPerPage = function () {\r\n            return filterForm.find('select[name=items_per_page]').val()\r\n        };\r\n\r\n        var criteria = {\r\n            orderings: [],\r\n            conditions: []\r\n        };\r\n\r\n        var currentAjaxRequest;\r\n\r\n        var loadCurrentPage = function () {\r\n            tableContainer.addClass('loading');\r\n\r\n            if (currentAjaxRequest) {\r\n                currentAjaxRequest.abort();\r\n            }\r\n\r\n            criteria.offset = currentPage * getItemsPerPage();\r\n            criteria.max_rows = getItemsPerPage();\r\n\r\n            currentAjaxRequest = $.ajax({\r\n                url: loadRowsUrl,\r\n                type: 'post',\r\n                dataType: 'html',\r\n                data: criteria\r\n            });\r\n\r\n            currentAjaxRequest.done(function (tableData) {\r\n                table.html(tableData);\r\n                Dms.table.initialize(tableContainer);\r\n            });\r\n\r\n            currentAjaxRequest.fail(function () {\r\n                tableContainer.addClass('error');\r\n\r\n                swal({\r\n                    title: \"Could not load table data\",\r\n                    text: \"An unexpected error occurred\",\r\n                    type: \"error\"\r\n                });\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                tableContainer.removeClass('loading');\r\n            });\r\n        };\r\n\r\n        filterForm.find('button').click(function () {\r\n            criteria.orderings = [\r\n                {\r\n                    component: filterForm.find('[name=component]').val(),\r\n                    direction: filterForm.find('[name=direction]').val()\r\n                }\r\n            ];\r\n\r\n            criteria.conditions = [\r\n                // TODO:\r\n            ];\r\n\r\n            loadCurrentPage();\r\n        });\r\n\r\n        loadCurrentPage();\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    var fieldCounter = 1;\r\n\r\n    element.find('.dms-form-fieldset .form-group').each(function () {\r\n        var fieldLabel = $(this).children('label[data-for]');\r\n        var forFieldName = fieldLabel.attr('data-for');\r\n\r\n        if (forFieldName) {\r\n            var forField = $(this).first('*[name=\"' + forFieldName + '\"], .dms-inner-form[data-name=\"' + forFieldName + '\"]');\r\n\r\n            if (!forField.attr('id')) {\r\n                forField.attr('id', 'dms-field-' + fieldCounter);\r\n                fieldCounter++;\r\n            }\r\n\r\n            fieldLabel.attr('for', forField.attr('id'));\r\n        }\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('form.dms-staged-form').each(function () {\r\n        var form = $(this);\r\n        var parsley = form.parsley();\r\n        var stageElements = form.find('.dms-form-stage');\r\n        var submitButtons = form.find('input[type=submit], button[type=submit]');\r\n\r\n        var updateFormValidity = function () {\r\n            var isValid = parsley.isValid()\r\n                && form.find('.has-error').length === 0\r\n                && form.find('.dms-form-stage').length === form.find('.dms-form-stage.loaded').length;\r\n\r\n            submitButtons.prop('disabled', !isValid);\r\n        };\r\n\r\n        form.on('change input', '*[name]:input', updateFormValidity);\r\n        updateFormValidity();\r\n\r\n        stageElements.each(function () {\r\n            var currentStage = $(this);\r\n\r\n            if (currentStage.is('.loaded')) {\r\n                return;\r\n            }\r\n\r\n            var previousStages = currentStage.prevAll('.dms-form-stage');\r\n            var loadStageUrl = currentStage.attr('data-stage-load-url');\r\n            var dependentFields = currentStage.attr('data-stage-dependent-fields');\r\n            var dependentFieldsSelector = null;\r\n            var currentAjaxRequest = null;\r\n\r\n            if (dependentFields) {\r\n                var dependentFieldNames = JSON.parse(dependentFields);\r\n\r\n                var selectors = [];\r\n                $.each(dependentFieldNames, function (index, fieldName) {\r\n                    selectors.push('*[name=\"' + fieldName + '\"]:input');\r\n                    selectors.push('*[name^=\"' + fieldName + '[\"][name$=\"]\"]:input');\r\n                });\r\n\r\n                dependentFieldsSelector = selectors.join(',');\r\n            } else {\r\n                dependentFieldsSelector = '*[name]:input';\r\n            }\r\n\r\n            previousStages.on('change input', dependentFieldsSelector, function () {\r\n                if (currentAjaxRequest) {\r\n                    currentAjaxRequest.abort();\r\n                }\r\n\r\n                currentStage.removeClass('loaded');\r\n                currentStage.addClass('loading');\r\n\r\n                var formData = new FormData();\r\n\r\n                previousStages.find(dependentFieldsSelector).each(function () {\r\n                    var fieldName = $(this).attr('name');\r\n\r\n                    if ($(this).is('[type=file]')) {\r\n                        $.each(this.files, function (index, file) {\r\n                            formData.append(fieldName, file);\r\n                        });\r\n                    } else {\r\n                        formData.append(fieldName, $(this).val());\r\n                    }\r\n                });\r\n\r\n                currentAjaxRequest = $.ajax({\r\n                    url: loadStageUrl,\r\n                    type: 'post',\r\n                    processData: false,\r\n                    contentType: false,\r\n                    dataType: 'html',\r\n                    data: formData\r\n                });\r\n\r\n                currentAjaxRequest.done(function (html) {\r\n                    currentStage.removeClass('loading');\r\n                    currentStage.addClass('loaded');\r\n                    Dms.form.validation.clearMessages(form);\r\n                    currentStage.html(html);\r\n                    Dms.form.initialize(currentStage);\r\n                });\r\n\r\n                currentAjaxRequest.fail(function (xhr) {\r\n                    switch (xhr.status) {\r\n                        case 422: // Unprocessable Entity (validation failure)\r\n                            var validation = JSON.parse(xhr.responseText);\r\n                            Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\r\n                            break;\r\n\r\n                        case 400: // Bad request\r\n                            swal({\r\n                                title: \"Could not load form\",\r\n                                text: JSON.parse(xhr.responseText).message,\r\n                                type: \"error\"\r\n                            });\r\n                            break;\r\n\r\n                        default: // Unknown error\r\n                            swal({\r\n                                title: \"Could not load form\",\r\n                                text: \"An unexpected error occurred\",\r\n                                type: \"error\"\r\n                            });\r\n                            break;\r\n                    }\r\n                });\r\n\r\n                currentAjaxRequest.always(updateFormValidity);\r\n            });\r\n        });\r\n    });\r\n});","Dms.form.initializeCallbacks.push(function (element) {\r\n\r\n    element.find('form.dms-staged-form').each(function () {\r\n        var form = $(this);\r\n        var submitButtons = form.find('input[type=submit], button[type=submit]');\r\n        var submitMethod = form.attr('method');\r\n        var submitUrl = form.attr('action');\r\n\r\n        form.on('submit', function (e) {\r\n            e.preventDefault();\r\n\r\n            var formData = new FormData(form.get(0));\r\n\r\n            submitButtons.prop('disabled', true);\r\n\r\n            var currentAjaxRequest = $.ajax({\r\n                url: submitUrl,\r\n                type: submitMethod,\r\n                processData: false,\r\n                contentType: false,\r\n                dataType: 'json',\r\n                data: formData\r\n            });\r\n\r\n            currentAjaxRequest.done(function (data) {\r\n                Dms.action.responseHandler(data);\r\n            });\r\n\r\n            currentAjaxRequest.fail(function (xhr) {\r\n                switch (xhr.status) {\r\n                    case 422: // Unprocessable Entity (validation failure)\r\n                        var validation = JSON.parse(xhr.responseText);\r\n                        Dms.form.validation.displayMessages(form, validation.messages.fields, validation.messages.constraints);\r\n                        break;\r\n\r\n                    default: // Unknown error\r\n                        swal({\r\n                            title: \"Could not submit form\",\r\n                            text: \"An unexpected error occurred\",\r\n                            type: \"error\"\r\n                        });\r\n                        break;\r\n                }\r\n            });\r\n\r\n            currentAjaxRequest.always(function () {\r\n                submitButtons.prop('disabled', false);\r\n            });\r\n        });\r\n    });\r\n});","Dms.form.initializeValidationCallbacks.push(function (element) {\r\n\r\n    element.find('.dms-form-fields').each(function () {\r\n        if (!$(this).attr('id')) {\r\n            $(this).attr('id', Dms.utilities.guidGenerator());\r\n        }\r\n    });\r\n\r\n    element.find('.dms-form-fields').each(function () {\r\n        var formFieldsGroupId = $(this).attr('id');\r\n\r\n\r\n        var buildElementSelect = function (fieldName) {\r\n            return '#' + formFieldsGroupId + '*[type=\"' + fieldName + '\"]:input';\r\n        };\r\n\r\n        var fieldValidations = {\r\n            'data-equal-fields': 'data-parsley-equalto',\r\n            'data-greater-than-fields': 'data-parsley-gt',\r\n            'data-greater-than-or-equal-fields': 'data-parsley-gte',\r\n            'data-less-than-fields': 'data-parsley-lt',\r\n            'data-less-than-or-equal-fields': 'data-parsley-lte'\r\n        };\r\n\r\n        $.each(fieldValidations, function (validationAttr, parsleyAttr) {\r\n            var fieldsMap = $(this).attr(validationAttr);\r\n\r\n            if (fieldsMap) {\r\n                $.each(JSON.parse(fieldsMap), function (fieldName, otherFieldName) {\r\n                    $(this).find(buildElementSelect(fieldName)).attr(parsleyAttr, buildElementSelect(otherFieldName));\r\n                });\r\n            }\r\n        });\r\n    });\r\n\r\n    element.find('form.dms-staged-form').each(function () {\r\n        var form = $(this);\r\n        form.parsley();\r\n\r\n        form.find('.dms-form-fields').each(function (index) {\r\n            $(this).find(':input').attr('data-parsley-group', 'validation-group-' + index);\r\n        });\r\n    });\r\n\r\n    element.find('form.dms-form').each(function () {\r\n        $(this).parsley();\r\n    });\r\n});","Dms.widget.initializeCallbacks.push(function () {\r\n    $('.dms-widget-unparameterized-action, .dms-widget-parameterized-action').each(function () {\r\n        var widget = $(this);\r\n        var button = widget.find('button');\r\n\r\n        if (button.is('.btn-danger')) {\r\n            var isConfirmed = false;\r\n\r\n            button.click(function () {\r\n                if (isConfirmed) {\r\n                    isConfirmed = false;\r\n                    return;\r\n                }\r\n\r\n                swal({\r\n                    title: \"Are you sure?\",\r\n                    text: \"This will execute the '\" + widget.attr('data-action-label') + \"' action\",\r\n                    type: \"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: \"#DD6B55\",\r\n                    confirmButtonText: \"Yes proceed!\"\r\n                }, function () {\r\n                    isConfirmed = true;\r\n                    $(this).click();\r\n                });\r\n\r\n                return false;\r\n            });\r\n        }\r\n    });\r\n});"],"sourceRoot":"/source/"}